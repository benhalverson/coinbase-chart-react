{"version":3,"sources":["LineChart.js","ToolTip.js","InfoBox.js","pages/HomePage.js","pages/AboutPage.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hover","activePoint","data","min","x","max","length","reduce","p","y","_this$props","svgWidth","yLabelSize","getX","_this$props2","svgHeight","xLabelSize","gY","getY","e","_this2","_this$props3","svgLocation","document","getElementsByClassName","getBoundingClientRect","adjustment","width","relativeLoc","clientX","left","svgData","map","point","push","svgX","getSvgX","svgY","getSvgY","d","closestPoint","i","c","Math","abs","stopHover","setState","onChartHover","_this3","_this$props4","color","pathD","join","react_default","a","createElement","className","style","stroke","_this4","concat","_this$props5","transform","textAnchor","toLocaleString","currency","x1","y1","x2","y2","strokeDasharray","_this$props6","_this$props7","pointRadius","r","cx","cy","_this5","_this$props8","height","viewBox","onMouseLeave","onMouseMove","getCoords","makeAxis","makePath","makeArea","makeLabels","createLine","makeActivePoint","Component","defaultProps","ToolTip","placementStyles","Infobox","currentPrice","monthChangeD","monthChangeP","updatedAt","getData","fetch","then","res","json","coinData","price","bpi","USD","rate_float","change","changeP","toFixed","time","updated","catch","console","error","refresh","setInterval","ReactDOM","findDOMNode","classList","add","el","setTimeout","remove","id","moment","fromNow","HomePage","fetchingData","sortedData","count","date","format","InfoBox","src_ToolTip","src_LineChart","b","handleChartHover","AboutPage","Home","pages_HomePage","About","pages_AboutPage","Nav","BrowserRouter","Link","to","Route","exact","path","component","App","src_Nav","Boolean","window","location","hostname","match","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7f42084.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles/scss/linechart.scss';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: null,\n      activePoint: null\n    };\n  }\n\n  // Get X & Y || Min & Max\n  getX() {\n    const { data } = this.props;\n    return {\n      min: data[0].x,\n      max: data[data.length - 1].x\n    };\n  }\n\n  getY() {\n    const { data } = this.props;\n    return {\n      min: data.reduce((min, p) => (p.y < min ? p.y : min), data[0].y),\n      max: data.reduce((max, p) => (p.y > max ? p.y : max), data[0].y)\n    };\n  }\n\n  // Get SVG coords\n  getSvgX(x) {\n    const { svgWidth, yLabelSize } = this.props;\n    return yLabelSize + (x / this.getX().max) * (svgWidth - yLabelSize);\n  }\n\n  getSvgY(y) {\n    const { svgHeight, xLabelSize } = this.props;\n    const gY = this.getY();\n    return (\n      ((svgHeight - xLabelSize) * gY.max - (svgHeight - xLabelSize) * y) /\n      (gY.max - gY.min)\n    );\n  }\n\n  getCoords(e) {\n    const { svgWidth, data, yLabelSize } = this.props;\n    const svgLocation = document\n      .getElementsByClassName('linechart')[0]\n      .getBoundingClientRect();\n    const adjustment = (svgLocation.width - svgWidth) / 2;\n    const relativeLoc = e.clientX - svgLocation.left - adjustment;\n\n    let svgData = [];\n    data.map(point => {\n      return svgData.push({\n        svgX: this.getSvgX(point.x),\n        svgY: this.getSvgY(point.y),\n        d: point.d,\n        p: point.p\n      });\n    });\n\n    let closestPoint = {};\n    for (let i = 0, c = 500; i < svgData.length; i++) {\n      if (Math.abs(svgData[i].svgX - this.state.hover) <= c) {\n        c = Math.abs((svgData[i].svgX - this.state.hover));\n        closestPoint = svgData[i];\n      }\n    }\n\n    if (relativeLoc - yLabelSize < 0) {\n      this.stopHover();\n    } else {\n      this.setState({\n        hover: relativeLoc,\n        activePoint: closestPoint\n      });\n      this.props.onChartHover(relativeLoc, closestPoint);\n    }\n  }\n\n  stopHover() {\n    this.setState({\n      hover: null,\n      activePoint: null\n    });\n    this.props.onChartHover(null, null);\n  }\n\n  // Build SVG path\n  makePath() {\n    const { data, color } = this.props;\n    let pathD =\n      'M ' + this.getSvgX(data[0].x) + ' ' + this.getSvgY(data[0].y) + ' ';\n\n    pathD += data\n      .map((point, i) => {\n        return 'L ' + this.getSvgX(point.x) + ' ' + this.getSvgY(point.y) + ' ';\n      })\n      .join('');\n\n    return (\n      <path className=\"linechart__path\" d={pathD} style={{ stroke: color }} />\n    );\n  }\n\n  // Build shaded area\n  makeArea() {\n    const { data } = this.props;\n    let pathD = `M ${this.getSvgX(data[0].x)} ${this.getSvgY(data[0].y)}`;\n    pathD += data\n      .map((point, i) => {\n        return `L ${this.getSvgX(point.x)} ${this.getSvgY(point.y)}`;\n      })\n      .join('');\n\n    const x = this.getX();\n    const y = this.getY();\n\n    pathD += `L ${this.getSvgX(x.max)} ${this.getSvgY(y.min)} L ${this.getSvgX(\n      x.min\n    )} ${this.getSvgY(y.min)}`;\n\n    return <path className=\"linechart__area\" d={pathD} />;\n  }\n\n  makeLabels() {\n    const { svgHeight, svgWidth, xLabelSize, yLabelSize } = this.props;\n    const padding = 5;\n    return (\n      <g className=\"linechart__label\">\n        {/* Y AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize / 2}, 20)`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().max.toLocaleString('us-EN', {\n            style: 'currency',\n            currency: 'USD'\n          })}\n        </text>\n        <text\n          transform={`translate(${yLabelSize / 2}, ${svgHeight -\n            xLabelSize -\n            padding})`}\n          textAnchor=\"middle\"\n        >\n          {this.getY().min.toLocaleString('us-EN', {\n            style: 'currency',\n            currency: 'USD'\n          })}\n        </text>\n        {/* X AXIS LABELS */}\n        <text\n          transform={`translate(${yLabelSize}, ${svgHeight})`}\n          textAnchor=\"start\"\n        >\n          {this.props.data[0].d}\n        </text>\n        <text\n          transform={`translate(${svgWidth}, ${svgHeight})`}\n          textAnchor=\"end\"\n        >\n          {this.props.data[this.props.data.length - 1].d}\n        </text>\n      </g>\n    );\n  }\n\n  makeAxis() {\n    const { yLabelSize } = this.props;\n    const x = this.getX();\n    const y = this.getY();\n\n    return (\n      <g className=\"linechart__axis\">\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.min)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.min)}\n          strokeDasharray=\"5\"\n        />\n        <line\n          x1={this.getSvgX(x.min) - yLabelSize}\n          y1={this.getSvgY(y.max)}\n          x2={this.getSvgX(x.max)}\n          y2={this.getSvgY(y.max)}\n          strokeDasharray=\"5\"\n        />\n      </g>\n    );\n  }\n\n  createLine() {\n    const { svgHeight, xLabelSize } = this.props;\n    return (\n      <line\n        className=\"hoverline\"\n        x1={this.state.hover}\n        y1={-8}\n        x2={this.state.hover}\n        y2={svgHeight - xLabelSize}\n      />\n    );\n  }\n\n  makeActivePoint() {\n    const { color, pointRadius } = this.props;\n    return (\n      <circle\n        className=\"linechart__point\"\n        style={{ stroke: color }}\n        r={pointRadius}\n        cx={this.state.activePoint.svgX}\n        cy={this.state.activePoint.svgY}\n      />\n    );\n  }\n  render() {\n    const { svgHeight, svgWidth } = this.props;\n    return (\n      <svg\n        width={svgWidth}\n        height={svgHeight}\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n        className={'linechart'}\n        onMouseLeave={() => this.stopHover()}\n        onMouseMove={e => this.getCoords(e)}\n      >\n        <g>\n          {this.makeAxis()}\n          {this.makePath()}\n          {this.makeArea()}\n          {this.makeLabels()}\n          {this.state.hover ? this.createLine() : null}\n          {this.state.hover ? this.makeActivePoint() : null}\n        </g>\n      </svg>\n    );\n  }\n}\n\nLineChart.defaultProps = {\n  data: [],\n  color: '#ccc',\n  pointRadius: 5,\n  svgHeight: 300,\n  svgWidth: 900,\n  xLabelSize: 20,\n  yLabelSize: 80\n};\nexport default LineChart;\n","import React, { Component } from 'react';\n\nimport './styles/scss/tooltip.scss';\n\nclass ToolTip extends Component {\n  render() {\n    const {hover, activePoint} = this.props;\n    const svgLocation = document.getElementsByClassName('linechart')[0].getBoundingClientRect();\n\n    let placementStyles = {};\n    let width = 100;\n    placementStyles.width = width + 'px';\n    placementStyles.left = hover + svgLocation.left - (width/2);\n\n    return (\n      <div className='hover' style={ placementStyles }>\n        <div className='date'>{ activePoint.d }</div>\n        <div className='hover__price'>{ activePoint.p }</div>\n      </div>\n    )\n  }\n}\n\nexport default ToolTip;","import React, { Component } from 'react'; \nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\n\nimport './infobox.css';\n\nclass Infobox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPrice: null,\n      monthChangeD: null,\n      monthChangeP: null,\n      updatedAt: null\n    }\n  }\n\n  componentDidMount() {\n\n    this.getData = () => {\n      const { data } = this.props;\n      const url = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n      \n      fetch(url)\n        .then(res => res.json())\n        .then((coinData) => {\n          const price = coinData.bpi.USD.rate_float;\n          const change = price - data[0].y;\n          const changeP = (price - data[0].y) / data[0].y * 100;\n          this.setState({\n            currentPrice: coinData.bpi.USD.rate_float,\n            monthChangeD: change.toLocaleString('us-EN', { style: 'currency', currency: 'USD'}),\n            monthChangeP: changeP.toFixed(2) + '%',\n            updatedAt: coinData.time.updated\n          })\n        })\n        .catch(e => console.error(`Error ${e}`));\n    }\n    this.getData();\n    this.refresh = setInterval(() => this.getData(), 90000);\n  }\n\n  componentWillUpdate() {\n    ReactDOM.findDOMNode(this).classList.add(\"currentPrice\");\n  }\n\n  componentDidUpdate(){\n    let el = ReactDOM.findDOMNode(this);\n    setTimeout(function () {\n      el.classList.remove(\"currentPrice\");\n    }, 1000);\n  }\n\n\n  render() {\n    return(<div id=\"data-container\">\n      { this.state.currentPrice ?\n        <div id='left' className='box'>\n          <div className='heading'>{this.state.currentPrice.toLocaleString('us-EN', { style: 'currency', currency: 'USD'})}</div>\n          <div className='subtext'>{'Updated ' + moment(this.state.updatedAt).fromNow()}</div>\n        </div> : null }\n      { this.state.monthChangeD ?\n      <div id='middle' className='box'>\n        <div className='heading'>{this.state.monthChangeD}</div>\n        <div className='subtext'>Changed since last Month</div>\n      </div> : null }\n      { this.state.monthChangeP ?\n      <div id='right' className='box'>\n        <div className='heading'>{this.state.monthChangeP}</div>\n        <div className='subtext'>Changed since last Month</div>\n      </div> : null }\n\n    </div>)\n  }\n}\n\nexport default Infobox;","import React, { Component } from 'react';\n\nimport moment from 'moment';\nimport '.././styles/scss/nav.scss';\nimport LineChart from '.././LineChart';\nimport ToolTip from '.././ToolTip';\nimport InfoBox from '.././InfoBox';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchingData: true,\n      data: null,\n      hover: null,\n      activePoint: null\n    }\n  }\n\n  handleChartHover(hover, activePoint) {\n    this.setState({\n      hover,\n      activePoint\n    });\n  }\n  componentDidMount() {\n    const getData = () => {\n      const url = 'https://api.coindesk.com/v1/bpi/historical/close.json';\n      debugger;\n      fetch(url)\n        .then((res) => res.json())\n        .then((coinData) => {\n          const sortedData = [];\n          let count = 0;\n          for (let date in coinData.bpi) {\n            sortedData.push({\n              d: moment(date).format('MMM DD'),\n              p: coinData.bpi[date].toLocaleString('us-EN', {\n                style: 'currency',\n                currency: 'USD'\n              }),\n              x: count,\n              y: coinData.bpi[date]\n            });\n            count++;\n          }\n          this.setState({\n            data: sortedData,\n            fetchingData: false\n          })\n        })\n        .catch(e => console.error(`Error ${e}`));\n    }\n    getData();\n  }\n\n\n  render() {\n    return (\n      <div className = \"container\">\n        <div className=\"row\">\n          <div className=\"infobox\">\n            { !this.state.fetchingData ?\n            <InfoBox data={this.state.data} />\n            : null  }\n          </div>\n        </div>\n        <div className='row'>\n          <div className=\"popup\">\n              {this.state.hover ? <ToolTip hover={this.state.hover} activePoint={this.state.activePoint} /> : null}\n          </div>\n        </div>\n        <div className='row'>\n          <div className=\"chart\">\n              { !this.state.fetchingData ?\n              <LineChart data={this.state.data} onChartHover={(a, b) => this.handleChartHover(a,b)}  /> : null\n            }\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <div>\n        Please visit our homepage to view the most current data. More about us info coming soon!\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\n\nconst Home = () => (\n  <div className=\"main-content\">\n    <HomePage />\n  </div>\n);\n\nconst About = () => (\n  <div className=\"main-content\">\n    <AboutPage />\n  </div>\n);\n\nclass Nav extends Component {  \n  render() {\n    return( \n        <Router>\n          <div>\n            <div className=\"nav-container\">\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/about\">About</Link>\n            </div>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default Nav;","import React, {\n  Component\n} from 'react';\n\nimport './styles/scss/App.scss'\n\nimport Nav from './Nav';\n\nclass App extends Component {\n  render() {\n    return (\n      <Nav />\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/scss/index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}